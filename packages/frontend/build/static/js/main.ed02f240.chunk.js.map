{"version":3,"sources":["styles/abstracts/_variables.scss","components/Header/style.scss","views/About/styles.scss","views/Dashboard/styles.scss","components/Calendar/styles.scss","components/LoadingWrapper/styles.scss","components/DataCardList/style.scss","components/Checkbox/styles.scss","components/CollectionSelectors/style.scss","components/BigCalendar/styles.scss","views/Home/styles.scss","styles/index.scss","history/index.ts","components/Header/links.tsx","components/Header/index.tsx","components/ViewWrapper/index.tsx","views/About/index.tsx","views/NotFound/index.tsx","graphql/queries/index.ts","statics/index.ts","hooks/index.ts","components/Calendar/index.tsx","util/index.ts","components/DataCardList/DataCard.tsx","components/Loading/index.tsx","components/LoadingWrapper/index.tsx","components/DataCardList/index.tsx","components/ReactSelectMulti/index.tsx","components/MTextBox/index.tsx","views/Dashboard/index.tsx","components/Checkbox/index.tsx","components/CollectionSelectors/index.tsx","components/BigCalendar/index.tsx","views/Home/index.tsx","routers/index.tsx","graphql/client.ts","App.tsx","index.tsx"],"names":["module","exports","history","createBrowserHistory","Links","links","setMobileOpen","map","link","label","key","to","onClick","ListItem","button","Header","useState","mobileOpen","handleDrawerToggle","className","IconButton","data-testid","style","color","textDecoration","Drawer","anchor","open","onClose","ViewWrapper","children","About","href","NotFound","props","ALL_HOUSE_COMMITTEES","gql","ALL_SENATE_COMMITTEES","HOUSE_COMMITTEES","SENATE_COMMITTEES","houseCommittees","value","senateCommittees","useDashboardState","collection","useQueryParam","StringParam","filter","setFilter","DateParam","minDate","setMinDate","maxDate","setMaxDate","ArrayParam","subcollections","setSubcollections","gqlQuery","selectOptions","getCollectionOptions","skip","setSkip","limit","setLimit","today","useRef","Date","current","twoMonthsFromToday","setMonth","getMonth","useQuery","variables","committee","toISOString","text","notifyOnNetworkStatusChange","loading","error","data","fetchMore","Calendar","handleDateRangePick","minDetail","process","selectRange","returnValue","onChange","dates","goToLink","window","DataCard","datum","title","slice","length","find","x","Paper","moment","date","format","time","location","Loading","CircularProgress","LoadingWrapper","isDisabled","message","DataCardList","dataKey","handleFetchMore","isLoadingMore","dataList","val","i","onEnter","ReactSelect","options","callBack","option","React","o","includes","selectedOption","setSelectedOption","isMulti","theme","rTheme","colors","primary","styles","primaryColor","newOptions","handleChange","MaterialSearchBox","instant","query","setQuery","handleSearch","term","TextField","onKeyPress","e","preventDefault","target","InputProps","startAdornment","InputAdornment","position","Search","Dashboard","match","params","ReactSelectMulti","MTextBox","Array","isArray","inSevenDays","now","listLength","updateQuery","prev","fetchMoreResult","Checkbox","checked","setChecked","type","name","CollectionSelectors","house","setHouse","senate","setSenate","getMin","view","startOf","toDate","getMax","endOf","localizer","momentLocalizer","BigCalendar","setView","early","houseCommitteesLoading","houseCommitteesData","senateCommitteesLoading","senateCommitteesData","useHomeState","filterRegex","RegExp","events","theDate","theTime","startTime","start","end","add","__typename","min","titleAccessor","y","temp","a","getCommitteeLabel","onShowMore","onView","console","log","eventPropGetter","toLowerCase","onNavigate","handleOnNavigate","onSelectEvent","event","handleSelectEvent","popup","defaultView","isMobile","views","drilldownView","onDrillDown","Home","BooleanParam","setSenateSelected","setHouseSelected","AppRouter","ReactRouterRoute","Route","path","exact","component","httpLink","createHttpLink","uri","cache","InMemoryCache","client","ApolloClient","connectToDevTools","App","useEffect","ReactGA","initialize","pageview","ReactDOM","render","document","getElementById"],"mappings":"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AH,KAaEA,IAAH,KC9Ia,CACvC,CACEK,MAAO,OACPhC,MAAO,kBAET,CACEgC,MAAO,OACPhC,MAAO,eAET,CACEgC,MAAO,OACPhC,MAAO,kBAET,CACEgC,MAAO,OACPhC,MAAO,kBAET,CACEgC,MAAO,OACPhC,MAAO,UAET,CACEgC,MAAO,OACPhC,MAAO,WAET,CACEgC,MAAO,OACPhC,MAAO,gCAET,CACEgC,MAAO,OACPhC,MAAO,UAET,CACEgC,MAAO,OACPhC,MAAO,sBAET,CACEgC,MAAO,OACPhC,MAAO,mBAET,CACEgC,MAAO,OACPhC,MAAO,aAET,CACEgC,MAAO,OACPhC,MAAO,SAET,CACEgC,MAAO,OACPhC,MAAO,qBAET,CACEgC,MAAO,OACPhC,MAAO,qBAET,CACEgC,MAAO,OACPhC,MAAO,aAET,CACEgC,MAAO,OACPhC,MAAO,8BAET,CACEgC,MAAO,OACPhC,MAAO,kBAET,CACEgC,MAAO,OACPhC,MAAO,kBAET,CACEgC,MAAO,OACPhC,MAAO,oBAET,CACEgC,MAAO,OACPhC,MAAO,oBAIEiC,EAA6B,CACxC,CACEjC,MAAO,cACPgC,MAAO,QAET,CACEhC,MAAO,QACPgC,MAAO,QAET,CACEhC,MAAO,QACPgC,MAAO,QAET,CACEhC,MAAO,iBACPgC,MAAO,QAET,CACEhC,MAAO,iBACPgC,MAAO,QAET,CACEhC,MAAO,UACPgC,MAAO,QAET,CACEhC,MAAO,SACPgC,MAAO,QAET,CACEhC,MAAO,+BACPgC,MAAO,QAET,CACEhC,MAAO,cACPgC,MAAO,QAET,CACEhC,MAAO,SACPgC,MAAO,QAET,CACEhC,MAAO,UACPgC,MAAO,QAET,CACEhC,MAAO,oBACPgC,MAAO,QAET,CACEhC,MAAO,oBACPgC,MAAO,QAET,CACEhC,MAAO,iBACPgC,MAAO,QAET,CACEhC,MAAO,YACPgC,MAAO,QAET,CACEhC,MAAO,oBACPgC,MAAO,QAET,CACEhC,MAAO,yBACPgC,MAAO,QAET,CACEhC,MAAO,iBACPgC,MAAO,QAET,CACEhC,MAAO,6BACPgC,MAAO,QAET,CACEhC,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","file":"static/js/main.ed02f240.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"primaryColor\":\"#6d699d\",\"primaryColorDark\":\"#676394\",\"primaryColorLight\":\"#efedff\",\"secondaryColor\":\"#329d69\"};","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nexport default history;\n","import React, { ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ListItem } from \"@material-ui/core\";\n\ninterface LinkType {\n  label: string;\n  link: string;\n}\nexport interface Props {\n  links: LinkType[];\n  setMobileOpen(arg: boolean): void;\n}\n\nexport default function Links({\n  links,\n  setMobileOpen,\n}: Props): ReactElement | null {\n  const handleGoToLink = (): void => {\n    setMobileOpen(false);\n  };\n\n  return (\n    <ul>\n      {links.map(({ link, label }) => (\n        <Link key={link} to={link} onClick={() => handleGoToLink()}>\n          <ListItem button key={link}>\n            {label}\n          </ListItem>\n        </Link>\n      ))}\n    </ul>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Drawer, IconButton } from \"@material-ui/core\";\nimport Close from \"@material-ui/icons/Close\";\nimport Menu from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n\nimport Links from \"./links\";\n\nimport \"./style.scss\";\n\nconst Header = (): React.ReactElement => {\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  function handleDrawerToggle() {\n    setMobileOpen(!mobileOpen);\n  }\n\n  return (\n    <header className=\"header\">\n      <nav>\n        <IconButton\n          data-testid=\"menuButton\"\n          onClick={handleDrawerToggle}\n          className=\"menuButton pointer\"\n        >\n          <Menu />\n        </IconButton>\n        <Link to=\"/\" style={{ color: \"inherit\", textDecoration: \"inherit\" }}>\n          <h1 className=\"mainTitle pointer\">Cloture</h1>\n        </Link>\n        <Drawer\n          className=\"drawer\"\n          data-testid=\"drawer\"\n          anchor={\"left\"}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n        >\n          <IconButton\n            data-testid=\"closeButton\"\n            className=\"close\"\n            onClick={handleDrawerToggle}\n          >\n            <Close />\n          </IconButton>\n          <Links\n            setMobileOpen={setMobileOpen}\n            links={[\n              { label: \"Calendar\", link: \"/\" },\n              { label: \"House Data\", link: \"/dashboard/houseCommittees\" },\n              {\n                label: \"Senate Data\",\n                link: \"/dashboard/senateCommittees\",\n              },\n              { label: \"About\", link: \"/about\" },\n            ]}\n          />\n        </Drawer>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Header from \"../Header\";\n\ninterface ViewWrapperProps {\n  children: JSX.Element[] | JSX.Element;\n}\n\nconst ViewWrapper = ({ children }: ViewWrapperProps): React.ReactElement => {\n  return (\n    <>\n      <Header />\n      {children}\n    </>\n  );\n};\n\nexport default ViewWrapper;\n","import React from \"react\";\n\nimport ViewWrapper from \"../../components/ViewWrapper\";\nimport \"./styles.scss\";\n\nexport const About = () => {\n  return (\n    <ViewWrapper>\n      <div className=\"about-wrapper menu\">\n        <h2>Welcome to Cloture!</h2>\n        <p className=\"about-paragraph body\">\n          This application was designed to help journalists track and research\n          congressional committees, and quickly access hearing information. It\n          provides a user-friendly wrapper around congressional hearing websites\n          to make them easier to navigate.\n        </p>\n        <p className=\"about-paragraph body\">\n          Data on this site updates about every half hour, and is scraped\n          directly from the committee websites. As such, there may be instances\n          where committee hearings are notified to the clerk and not immediately\n          uploaded to this site. If you want to check, congress.gov has a\n          repository of upcoming hearings (including those which are not posted\n          on committee websites) available{\" \"}\n          <a href=\"https://www.congress.gov/committee-schedule/weekly/2020/09/21?searchResultViewType=compact\">\n            here\n          </a>\n          .\n        </p>\n        <p className=\"about-paragraph body\">\n          The search feature on this site will allow you to search the text of\n          committee webpages. However, the search function is <em>not</em> a\n          complete search of the committee transcripts. The search feature is\n          therefore useful for finding bill names, witnesses, and other\n          information about a hearing, but should not be considered a fool-proof\n          method for searching through the minutes of a given hearing for a\n          specific keyword or phrase.\n        </p>\n        <p className=\"about-paragraph body\">\n          The data on this website is also not a complete index of historical\n          hearing data. Most committees go back 5-10 years. This is largely due\n          to the fact that the committee websites are constantly changing, and\n          old committee hearing information is not always available. I am\n          currently working on indexing committee transcripts too, but for now,\n          please head to{\" \"}\n          <a href=\"https://www.govinfo.gov/browse/committee\">\n            the Government Publishing Office\n          </a>{\" \"}\n          website for committee transcripts.\n        </p>\n        <p className=\"about-paragraph body\">\n          Finally, due to the way certain committee websites are structured,\n          their data is not available on this website: First, the Senate Indian\n          Affairs Committee. For information from those hearings please head to\n          the <a href=\"https://www.indian.senate.gov\">committee website</a>.\n          Second, the House Intelligence Committee, which does not appear to\n          post their committee hearing information regularly anywhere online\n          other than with the{\" \"}\n          <a href=\"https://www.congress.gov/committee-schedule/weekly/2020/09/21\">\n            clerk\n          </a>{\" \"}\n          and through irregular press releases.\n        </p>\n        <p className=\"about-paragraph body\">\n          This project is fully open source and will always be so. If you would\n          like to contribute to the code or notice a bug, you can{\" \"}\n          <a href=\"https://www.twitter.com/harrisoncramer\">contact me</a> or\n          contribute directly to the{\" \"}\n          <a href=\"https://github.com/KingOfCramers/ts_cloture.app.frontend\">\n            frontend\n          </a>\n          ,{\" \"}\n          <a href=\"https://github.com/KingOfCramers/ts_cloture.app.backend\">\n            backend\n          </a>\n          , or the{\" \"}\n          <a href=\"https://github.com/KingOfCramers/gql3.0_processors\">web</a>{\" \"}\n          <a href=\"https://github.com/KingOfCramers/gql3.0_schedulers\">\n            scrapers\n          </a>\n          . Thanks for your support!\n        </p>\n      </div>\n    </ViewWrapper>\n  );\n};\n","import React from \"react\";\n\nimport ViewWrapper from \"../../components/ViewWrapper\";\ninterface NotFoundProps {}\n\nexport const NotFound = (props: NotFoundProps) => {\n  return (\n    <ViewWrapper>\n      <p>Sorry, that page could not be found.</p>\n    </ViewWrapper>\n  );\n};\n","import gql from \"graphql-tag\";\n\nexport const ALL_HOUSE_COMMITTEES = gql`\n  query data(\n    $minDate: DateTime!\n    $maxDate: DateTime!\n    $skip: Float!\n    $limit: Float!\n  ) {\n    allHouseCommittees(\n      input: {\n        minDate: $minDate\n        maxDate: $maxDate\n        skip: $skip\n        limit: $limit\n      }\n    ) {\n      title\n      link\n      date\n      time\n      text\n      committee\n      __typename\n    }\n  }\n`;\n\nexport const ALL_SENATE_COMMITTEES = gql`\n  query data(\n    $minDate: DateTime!\n    $maxDate: DateTime!\n    $skip: Float!\n    $limit: Float!\n  ) {\n    allSenateCommittees(\n      input: {\n        minDate: $minDate\n        maxDate: $maxDate\n        skip: $skip\n        limit: $limit\n      }\n    ) {\n      title\n      link\n      date\n      time\n      text\n      committee\n      __typename\n    }\n  }\n`;\n\nexport const HOUSE_COMMITTEES = gql`\n  query data(\n    $committee: [String!]\n    $title: String\n    $link: String\n    $minDate: DateTime\n    $maxDate: DateTime\n    $minTime: DateTime\n    $maxTime: DateTime\n    $text: String\n    $location: String\n    $skip: Float!\n    $limit: Float!\n  ) {\n    houseCommittees(\n      input: {\n        committee: $committee\n        title: $title\n        link: $link\n        minDate: $minDate\n        maxDate: $maxDate\n        minTime: $minTime\n        maxTime: $maxTime\n        text: $text\n        location: $location\n        skip: $skip\n        limit: $limit\n      }\n    ) {\n      title\n      link\n      date\n      time\n      text\n      location\n      committee\n    }\n  }\n`;\n\nexport const SENATE_COMMITTEES = gql`\n  query data(\n    $committee: [String!]\n    $title: String\n    $link: String\n    $minDate: DateTime\n    $maxDate: DateTime\n    $minTime: DateTime\n    $maxTime: DateTime\n    $text: String\n    $location: String\n    $skip: Float!\n    $limit: Float!\n  ) {\n    senateCommittees(\n      input: {\n        committee: $committee\n        title: $title\n        link: $link\n        minDate: $minDate\n        maxDate: $maxDate\n        minTime: $minTime\n        maxTime: $maxTime\n        text: $text\n        location: $location\n        skip: $skip\n        limit: $limit\n      }\n    ) {\n      title\n      link\n      date\n      time\n      text\n      location\n      committee\n    }\n  }\n`;\n\nexport const SENATE_COMMITTEE = gql`\n  query data($committee: String, $title: String) {\n    houseCommittee(committee: $committee, title: $title) {\n      title\n      link\n      date\n      time\n      text\n      location\n    }\n  }\n`;\n\nexport const HOUSE_COMMITTEE = gql`\n  query data($committee: String, $title: String) {\n    senateCommittee(committee: $committee, title: $title) {\n      title\n      link\n      date\n      time\n      text\n      location\n    }\n  }\n`;\n\n//export const HOMEQUERY = gql`\n//query data(\n//$minDate: DateTime\n//$maxDate: DateTime){\n//houseCommittees(\n//input: {\n//committee: $committee\n//title: $title\n//link: $link\n//minDate: $minDate\n//maxDate: $maxDate\n//minTime: $minTime\n//maxTime: $maxTime\n//text: $text\n//location: $location\n//skip: $skip\n//limit: $limit\n//}\n//) {\n//title\n//link\n//date\n//time\n//text\n//location\n//committee\n//}\n//}\n//`;\n","interface option {\n  value: string;\n  label: string;\n}\n\nexport const houseCommittees: option[] = [\n  {\n    value: \"admn\",\n    label: \"Administration\",\n  },\n  {\n    value: \"hagc\",\n    label: \"Agriculture\",\n  },\n  {\n    value: \"hapc\",\n    label: \"Appropriations\",\n  },\n  {\n    value: \"hasc\",\n    label: \"Armed Services\",\n  },\n  {\n    value: \"hbuc\",\n    label: \"Budget\",\n  },\n  {\n    value: \"clmt\",\n    label: \"Climate\",\n  },\n  {\n    value: \"help\",\n    label: \"Health, Education, and Labot\",\n  },\n  {\n    value: \"nrgy\",\n    label: \"Energy\",\n  },\n  {\n    value: \"fisv\",\n    label: \"Financial Services\",\n  },\n  {\n    value: \"hfac\",\n    label: \"Foreign Affairs\",\n  },\n  {\n    value: \"hjud\",\n    label: \"Judiciary\",\n  },\n  {\n    value: \"hrle\",\n    label: \"Rules\",\n  },\n  {\n    value: \"hhsc\",\n    label: \"Homeland Security\",\n  },\n  {\n    value: \"ntty\",\n    label: \"Natural Resources\",\n  },\n  {\n    value: \"ovst\",\n    label: \"Oversight\",\n  },\n  {\n    value: \"scnc\",\n    label: \"Science and Transportation\",\n  },\n  {\n    value: \"smbs\",\n    label: \"Small Business\",\n  },\n  {\n    value: \"trns\",\n    label: \"Transportation\",\n  },\n  {\n    value: \"hvac\",\n    label: \"Veterans Affairs\",\n  },\n  {\n    value: \"wymn\",\n    label: \"Ways and Means\",\n  },\n];\n\nexport const senateCommittees: option[] = [\n  {\n    label: \"Agriculture\",\n    value: \"sagc\",\n  },\n  {\n    label: \"Aging\",\n    value: \"sage\",\n  },\n  {\n    label: \"Rules\",\n    value: \"srle\",\n  },\n  {\n    label: \"Appropriations\",\n    value: \"sapc\",\n  },\n  {\n    label: \"Armed Services\",\n    value: \"sasc\",\n  },\n  {\n    label: \"Banking\",\n    value: \"sbnk\",\n  },\n  {\n    label: \"Budget\",\n    value: \"sbdg\",\n  },\n  {\n    label: \"Health, Education, and Labor\",\n    value: \"shlp\",\n  },\n  {\n    label: \"Environment\",\n    value: \"senv\",\n  },\n  {\n    label: \"Ethics\",\n    value: \"seth\",\n  },\n  {\n    label: \"Finance\",\n    value: \"sfin\",\n  },\n  {\n    label: \"Foreign Relations\",\n    value: \"sfrc\",\n  },\n  {\n    label: \"Homeland Security\",\n    value: \"shsc\",\n  },\n  {\n    label: \"Indian Affairs\",\n    value: \"sind\",\n  },\n  {\n    label: \"Judiciary\",\n    value: \"sjud\",\n  },\n  {\n    label: \"Natural Resources\",\n    value: \"snat\",\n  },\n  {\n    label: \"Select on Intelligence\",\n    value: \"ssci\",\n  },\n  {\n    label: \"Small Business\",\n    value: \"ssbs\",\n  },\n  {\n    label: \"Science and Transportation\",\n    value: \"sstr\",\n  },\n  {\n    label: \"Veterans Affairs\",\n    value: \"svac\",\n  },\n];\n","import { useRef, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport {\n  useQueryParam,\n  StringParam,\n  ArrayParam,\n  DateParam,\n} from \"use-query-params\";\nimport {\n  HOUSE_COMMITTEES,\n  SENATE_COMMITTEES,\n  ALL_HOUSE_COMMITTEES,\n  ALL_SENATE_COMMITTEES,\n} from \"../graphql/queries\";\nimport { houseCommittees, senateCommittees } from \"../statics\";\n\n//type collectionTypes = \"houseCommittees\" | \"senateCommittees\";\nconst getCollectionOptions = (collection: string) => {\n  if (collection === \"houseCommittees\") {\n    return { gqlQuery: HOUSE_COMMITTEES, selectOptions: houseCommittees };\n  }\n  if (collection === \"senateCommittees\") {\n    return { gqlQuery: SENATE_COMMITTEES, selectOptions: senateCommittees };\n  } else {\n    return { gqlQuery: SENATE_COMMITTEES, selectOptions: senateCommittees };\n  }\n};\n\n// The GQL Query...\nexport const useDashboardState = (collection: string) => {\n  // Get various parameters from query string\n  const [filter, setFilter] = useQueryParam(\"filter\", StringParam);\n  const [minDate, setMinDate] = useQueryParam(\"minDate\", DateParam);\n  const [maxDate, setMaxDate] = useQueryParam(\"maxDate\", DateParam);\n  const [subcollections, setSubcollections] = useQueryParam(\n    \"subcollections\",\n    ArrayParam\n  );\n\n  const { gqlQuery, selectOptions } = getCollectionOptions(collection);\n\n  // Get the query string and parse it, passing back the value as an array\n  const handleSetSubcollections = (subcollections: string[]) => {\n    setSubcollections(subcollections);\n  };\n\n  // Set skip and limit as state inside hook.\n  const [skip, setSkip] = useState(0);\n  const [limit, setLimit] = useState(10);\n\n  // If no dates are defined in URL (e.g. on first load), pass in current date.\n  const today = useRef(new Date()).current;\n\n  // Set future date limit based on today\n  const twoMonthsFromToday = useRef(\n    new Date(new Date().setMonth(today.getMonth() + 2))\n  ).current;\n\n  // Conduct Apollo query\n  const { loading, error, data, fetchMore } = useQuery(gqlQuery, {\n    variables: {\n      committee: subcollections,\n      minDate: minDate || today.toISOString(),\n      maxDate: maxDate || today.toISOString(),\n      text: filter,\n      skip: skip,\n      limit: limit,\n    },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  // Return the results of the query\n  // Return all setters + values for use inside the component\n  return {\n    loading,\n    error,\n    data,\n    fetchMore,\n    today,\n    twoMonthsFromToday,\n    filter,\n    setFilter,\n    minDate,\n    setMinDate,\n    maxDate,\n    setMaxDate,\n    subcollections,\n    selectOptions,\n    setSubcollections: handleSetSubcollections,\n    setSkip,\n    setLimit,\n  };\n};\n\nexport interface homeStateProps {\n  minDate: Date;\n  maxDate: Date;\n  house: boolean;\n  senate: boolean;\n}\n\nexport const useHomeState = ({\n  minDate,\n  maxDate,\n  house,\n  senate,\n}: homeStateProps) => {\n  const {\n    fetchMore: fetchMoreHouse,\n    loading: houseCommitteesLoading,\n    data: houseCommitteesData,\n  } = useQuery(ALL_HOUSE_COMMITTEES, {\n    variables: {\n      minDate,\n      maxDate,\n      skip: house ? 0 : 1000,\n      limit: 1000,\n    },\n  });\n\n  const {\n    fetchMore: fetchMoreSenate,\n    loading: senateCommitteesLoading,\n    data: senateCommitteesData,\n  } = useQuery(ALL_SENATE_COMMITTEES, {\n    variables: {\n      minDate,\n      maxDate,\n      skip: senate ? 0 : 1000,\n      limit: 1000,\n    },\n  });\n\n  // Pull off the data inside if the result is returned.\n  const houseCommittees = houseCommitteesData\n    ? houseCommitteesData[\"allHouseCommittees\"]\n    : null;\n  const senateCommittees = senateCommitteesData\n    ? senateCommitteesData[\"allSenateCommittees\"]\n    : null;\n\n  return {\n    // If either result is still loading, return loading\n    loading: senateCommitteesLoading || houseCommitteesLoading,\n    // Once both data are non-null, concatenate them and return\n    data:\n      houseCommittees && senateCommittees\n        ? [...houseCommittees, ...senateCommittees]\n        : null,\n    // How can we implement a re-run of this complicated hook that makes multiple queries?\n    //fetchMoreHouse,\n    //fetchMoreSenate,\n  };\n};\n","import React from \"react\";\nimport Cal from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./styles.scss\";\n\nexport interface CalendarProps {\n  filter: string;\n  minDate: Date;\n  maxDate: Date;\n  twoMonthsFromToday: Date;\n  handleDateRangePick: (dates: Date | Date[]) => void;\n}\n\nconst Calendar = ({\n  minDate,\n  maxDate,\n  twoMonthsFromToday,\n  handleDateRangePick,\n}: CalendarProps): React.ReactElement => {\n  return (\n    <>\n      <Cal\n        className={\"c1\"}\n        minDetail={\"month\"}\n        minDate={new Date(process.env.REACT_APP_MIN_DATE as string)}\n        maxDate={twoMonthsFromToday}\n        selectRange={true}\n        returnValue={\"range\"}\n        onChange={(dates) => handleDateRangePick(dates)}\n        value={[minDate, maxDate]}\n      />\n    </>\n  );\n};\nexport default Calendar;\n","import { houseCommittees, senateCommittees } from \"../statics\";\n\nexport const escapeRegExp = (x: string): string =>\n  x.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n\nexport const goToLink = (link: string) => {\n  window.open(link, \"_blank\");\n};\n\nexport const getCommitteeLabel = (x: string, y: string) => {\n  if (y === \"HouseCommittee\") {\n    const temp = houseCommittees.find((a) => a.value === x);\n    return temp ? temp.label : \"\";\n  } else {\n    const temp = senateCommittees.find((a) => a.value === x);\n    return temp ? temp.label : \"\";\n  }\n};\n\nexport default goToLink;\n","import React, { ReactElement } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { Committee } from \"./index\";\nimport { goToLink } from \"../../util/index\";\nimport moment from \"moment\";\n\nimport { houseCommittees } from \"../../statics\";\n\nexport interface DataCardProps {\n  datum: Committee;\n}\n\nconst DataCard = ({ datum }: DataCardProps): ReactElement => {\n  const title =\n    datum.title.slice(0, 250) + (datum.title.length > 250 ? \"...\" : \"\");\n  const committee = houseCommittees.find((x) => x.value === datum.committee);\n\n  return (\n    <Paper className=\"card pointer\" onClick={() => goToLink(datum.link)}>\n      <div className=\"title menu\">{title}</div>\n      <div className=\"content-container\">\n        <p>\n          <span>Date:</span> {moment(datum.date).format(\"MMMM DD, YYYY\")}\n        </p>\n        <p>\n          <span>Time:</span> {moment(datum.time).format(\"h:mm a\")}\n        </p>\n        {datum.location && (\n          <p>\n            <span>Location:</span> {datum.location}\n          </p>\n        )}\n        {committee && <p>{committee.label}</p>}\n      </div>\n    </Paper>\n  );\n};\nexport default DataCard;\n","import React, { ReactElement } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst Loading = (): ReactElement => {\n  return <CircularProgress className=\"loader\" />;\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { ApolloError } from \"@apollo/client\";\nimport Loading from \"../Loading\";\n\nimport \"./styles.scss\";\n\ninterface LoadingWrapperProps {\n  children?: JSX.Element[] | JSX.Element;\n  loading?: boolean;\n  error?: ApolloError | undefined;\n  isDisabled?: boolean;\n}\n\nconst LoadingWrapper = ({\n  children,\n  loading,\n  error,\n  isDisabled,\n}: LoadingWrapperProps): React.ReactElement => {\n  // If loading message or error message is supplied, provide loading or error screen. Otherwise, send children.\n  // Send children right away if wrapper is disabled.\n  if (!isDisabled) {\n    if (loading)\n      return (\n        <div className=\"loadingSpinner\">\n          <Loading />\n        </div>\n      );\n    if (error) return <p>`Error! ${error.message}`</p>;\n    return <>{children}</>;\n  } else {\n    return <>{children}</>;\n  }\n};\n\nexport default LoadingWrapper;\n","import React, { ReactElement } from \"react\";\nimport DataCard from \"./DataCard\";\nimport { Waypoint } from \"react-waypoint\";\nimport LoadingWrapper from \"../LoadingWrapper\";\n\nimport \"./style.scss\";\n\n// Stolen from backend...\nexport interface Committee {\n  title: string;\n  link: string;\n  date: Date;\n  time: Date;\n  text: string;\n  location?: string;\n  committee?: string;\n}\n\ntype Data = {\n  [key: string]: Committee[];\n};\n\ninterface Tvars {\n  ok: string;\n}\n\nexport interface DataCardListProps {\n  data: Data;\n  dataKey: string;\n  handleFetchMore: (listLength: number) => void;\n  isLoadingMore: boolean;\n}\n\nconst DataCardList = ({\n  data,\n  dataKey,\n  handleFetchMore,\n  isLoadingMore,\n}: DataCardListProps): ReactElement => {\n  // Get data by value name based on GQL query...\n  const dataList = data[dataKey].length > 0 ? data[dataKey] : null;\n  return (\n    <div className=\"dataCardList\">\n      <div className=\"content\">\n        {dataList ? (\n          dataList.map((val, i) => {\n            if (i === dataList.length - 5) {\n              return (\n                <div key={i}>\n                  <Waypoint onEnter={() => handleFetchMore(dataList.length)} />\n                  <DataCard key={i} datum={val} />\n                </div>\n              );\n            } else {\n              return <DataCard key={i} datum={val} />;\n            }\n          })\n        ) : (\n          <p>No data found</p>\n        )}\n        {isLoadingMore && <LoadingWrapper loading={isLoadingMore} />}\n      </div>\n    </div>\n  );\n};\nexport default DataCardList;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport { ValueType } from \"react-select\";\n\n// Get style variables\nimport styles from \"../../styles/abstracts/_variables.scss\";\n\ntype Option = {\n  value: string;\n  label: string;\n};\n\ninterface ReactSelectProps {\n  option: (string | null)[] | null | undefined;\n  options: Option[];\n  callBack: (value: string[]) => void;\n}\n\nconst ReactSelect = ({\n  options,\n  callBack,\n  option,\n}: ReactSelectProps): React.ReactElement => {\n  const [selectedOption, setSelectedOption] = React.useState<ValueType<Option>>(\n    option && options.filter((o) => option.includes(o.value))\n  );\n\n  const handleChange = (newOptions: Option[] | null) => {\n    setSelectedOption(newOptions);\n    callBack(newOptions ? newOptions.map((x) => x.value) : []);\n  };\n\n  return (\n    <Select\n      isMulti\n      theme={(rTheme) => ({\n        ...rTheme,\n        colors: {\n          ...rTheme.colors,\n          primary: styles.primaryColor,\n        },\n      })}\n      value={selectedOption}\n      // React-select has some weird typing issues...\n      onChange={(newOptions) => handleChange(newOptions as Option[] | null)}\n      options={options}\n    />\n  );\n};\n\nexport default ReactSelect;\n","import React, { useState, ReactElement } from \"react\";\nimport { InputAdornment, TextField, IconButton } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nexport interface SearchBoxProps {\n  callBack: (query: string) => void;\n  filter: string | null | undefined;\n  instant?: boolean;\n}\n\nconst MaterialSearchBox = ({\n  callBack,\n  filter,\n  instant,\n}: SearchBoxProps): ReactElement => {\n  const [query, setQuery] = useState(filter);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    if (instant) {\n      handleSearch(e.target.value);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      handleSearch(query || \"\");\n    }\n  };\n\n  const handleSearch = (term: string) => {\n    // Assign search term to itself or an empty string.\n    const searchTerm = term ?? \"\";\n    callBack(searchTerm);\n  };\n\n  const handleClickSearch = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    handleSearch(query || \"\");\n  };\n\n  return (\n    <TextField\n      //inputRef={(input) => input && input.focus()}\n      value={query}\n      onKeyPress={handleKeyPress}\n      onChange={handleChange}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <IconButton onClick={(e) => handleClickSearch(e)}>\n              <Search />\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport default MaterialSearchBox;\n","import \"./styles.scss\";\n\nimport React, { ReactElement, MouseEvent } from \"react\";\n\nimport { RouteComponentProps } from \"react-router\";\n\nimport { useDashboardState } from \"../../hooks\";\nimport Calendar from \"../../components/Calendar\";\nimport DataCardList from \"../../components/DataCardList\";\nimport LoadingWrapper from \"../../components/LoadingWrapper\";\nimport ReactSelectMulti from \"../../components/ReactSelectMulti\";\nimport MTextBox from \"../../components/MTextBox\";\nimport ViewWrapper from \"../../components/ViewWrapper\";\n\ninterface TParams {\n  collection: string;\n}\n\nexport const Dashboard = ({\n  match,\n}: RouteComponentProps<TParams>): ReactElement | null => {\n  // Get current match from router, use it to get the correct GQL query\n  const collection = match.params.collection;\n\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    filter,\n    today,\n    twoMonthsFromToday,\n    setFilter,\n    subcollections,\n    setSubcollections,\n    selectOptions,\n    minDate,\n    setMinDate,\n    maxDate,\n    setMaxDate,\n  } = useDashboardState(collection);\n\n  const handleDateRangePick = (dates: Date | Date[]): void => {\n    // Take both dates and pass them into queryString, causing re-render\n    if (Array.isArray(dates)) {\n      setMinDate(dates[0]);\n      setMaxDate(dates[1]);\n    } else {\n      // If something is broken, eliminate both dates.\n      setMinDate(null);\n      setMaxDate(null);\n    }\n  };\n\n  const handleSetToday = (e: MouseEvent): void => {\n    e.preventDefault();\n    setMinDate(null);\n    setMaxDate(null);\n  };\n\n  const handleSetWeek = (e: MouseEvent): void => {\n    e.preventDefault();\n    const inSevenDays = new Date(Date.now() + 7 * 24 * 60 * 60 * 1000);\n    setMinDate(today);\n    setMaxDate(inSevenDays);\n  };\n\n  const handleClearDates = (e: MouseEvent): void => {\n    e.preventDefault();\n    setMinDate(new Date(process.env.REACT_APP_MIN_DATE as string));\n    setMaxDate(twoMonthsFromToday);\n  };\n\n  const handleFetchMore = (listLength: number) => {\n    fetchMore({\n      variables: {\n        skip: listLength,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        // Assign new data to an object with the correct collection name\n        // This is required because the name of our query\n        const res = {\n          [collection]: [...prev[collection], ...fetchMoreResult[collection]],\n        };\n        return res;\n      },\n    });\n  };\n\n  return (\n    <ViewWrapper>\n      <div className=\"colWrapper\">\n        <div className=\"col left\">\n          <div className=\"col-header\">\n            <h3 className=\"menu\">Filters</h3>\n          </div>\n          <div className=\"filter\">\n            <ReactSelectMulti\n              callBack={setSubcollections}\n              option={subcollections}\n              options={selectOptions}\n            />\n          </div>\n          <div className=\"filter\">\n            <MTextBox filter={filter} callBack={setFilter} />\n          </div>\n          <div className=\"filter\">\n            <Calendar\n              handleDateRangePick={handleDateRangePick}\n              minDate={minDate ?? today}\n              maxDate={maxDate ?? today}\n              filter={filter || \"\"}\n              twoMonthsFromToday={twoMonthsFromToday}\n            />\n            <div className=\"buttons\">\n              <button className=\"btn pointer\" onClick={handleSetToday}>\n                Today\n              </button>\n              <button className=\"btn pointer\" onClick={handleSetWeek}>\n                Next week\n              </button>\n              <button className=\"btn pointer\" onClick={handleClearDates}>\n                All Time\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col right\">\n          <div className=\"col-header\">\n            <h3>Records</h3>\n          </div>\n          <LoadingWrapper // Disable wrapper after initial fetch (data is not null)\n            isDisabled={!!data}\n            loading={loading}\n            error={error}\n          >\n            <DataCardList\n              data={data}\n              dataKey={collection}\n              handleFetchMore={handleFetchMore}\n              isLoadingMore={loading}\n            />\n          </LoadingWrapper>\n        </div>\n      </div>\n    </ViewWrapper>\n  );\n};\n","import React, { ReactElement } from \"react\";\nimport \"./styles.scss\";\n\ninterface CheckboxProps {\n  label: string;\n  checked: boolean;\n  setChecked: (x: boolean) => void;\n}\n\nexport default function Checkbox({\n  label,\n  checked,\n  setChecked,\n}: CheckboxProps): ReactElement | null {\n  return (\n    <div className=\"checkbox-root\">\n      <label>{label}</label>\n      <input\n        type=\"checkbox\"\n        data-testid=\"my-checkbox\"\n        onChange={(e) => setChecked(e.target.checked)}\n        checked={checked}\n        name={label}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Checkbox from \"../Checkbox\";\nimport \"./style.scss\";\nimport { useQueryParam, StringParam } from \"use-query-params\";\n\nexport interface CollectionSelectorsProps {\n  house: boolean;\n  setHouse: (x: boolean) => void;\n  senate: boolean;\n  setSenate: (x: boolean) => void;\n}\n\nconst CollectionSelectors = ({\n  house,\n  setHouse,\n  senate,\n  setSenate,\n}: CollectionSelectorsProps): React.ReactElement => {\n  return (\n    <div className=\"collection-checkboxes\">\n      <div className=\"senate\">\n        <Checkbox checked={senate} setChecked={setSenate} label=\"Senate\" />\n      </div>\n      <div className=\"house\">\n        <Checkbox setChecked={setHouse} checked={house} label=\"House\" />\n      </div>\n    </div>\n  );\n};\n\nexport default CollectionSelectors;\n","import React, { useRef } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment, { unitOfTime } from \"moment\";\nimport { useHomeState } from \"../../hooks\";\nimport LoadingWrapper from \"../LoadingWrapper\";\nimport { goToLink, getCommitteeLabel } from \"../../util\";\nimport { isMobile } from \"react-device-detect\";\n\nimport \"./styles.scss\";\ninterface BigCalendarProps {\n  house: boolean;\n  senate: boolean;\n  filter: string;\n  minDate: Date;\n  setMinDate: (date: Date) => void;\n  maxDate: Date;\n  setMaxDate: (date: Date) => void;\n  early: Date;\n  view: string;\n  setView: (view: string) => void;\n}\n\nconst getMin = (view: string, date: Date) =>\n  moment(date)\n    .startOf(view === \"work_week\" ? \"week\" : (view as unitOfTime.StartOf))\n    .toDate();\n\nconst getMax = (view: string, date: Date) =>\n  moment(date)\n    .endOf(view === \"work_week\" ? \"week\" : (view as unitOfTime.StartOf))\n    .toDate();\n\nconst localizer = momentLocalizer(moment);\nconst BigCalendar = ({\n  house,\n  senate,\n  minDate,\n  setMinDate,\n  maxDate,\n  setMaxDate,\n  view,\n  setView,\n  filter,\n  early,\n}: BigCalendarProps): React.ReactElement => {\n  // Create reference as current date and use it to set initial parameters for min and max date.\n  const today = useRef(moment().startOf(\"day\").toDate()).current;\n\n  interface Datum {\n    title: string;\n    date: Date;\n    link: string;\n    text: string | null;\n    committee: string;\n    time: Date;\n    __typename: string;\n  }\n  interface Event {\n    title: string;\n    start: Date;\n    link: string;\n    end: Date;\n    allDay?: boolean;\n    resource?: any;\n    __typename: string;\n    committee: string;\n  }\n\n  interface HomeState {\n    loading: boolean;\n    data: Datum[] | null;\n  }\n\n  interface onNavigate {\n    date: Date;\n    view: string;\n  }\n\n  const { loading, data }: HomeState = useHomeState({\n    minDate: getMin(view || \"month\", minDate),\n    maxDate: getMax(view || \"month\", maxDate),\n    senate,\n    house,\n  });\n\n  const handleOnNavigate = ({ date, view }: onNavigate): void => {\n    setMinDate(getMin(view, date));\n    setMaxDate(getMax(view, date));\n  };\n\n  const handleSelectEvent = (e: Event) => {\n    goToLink(e.link);\n  };\n\n  const handleShowMore = (events: Event[]) => {};\n\n  const filterRegex = new RegExp(filter, \"gi\");\n  const events = data\n    ? data\n        .filter((x) => (x.text ? x.text.match(filterRegex) : true))\n        .map((x: Datum) => {\n          const theDate = moment(x.date).format(\"LLLL\");\n          const theTime = moment(x.time).format(\"hh:mm a\");\n          const startTime = moment(`${theDate} ${theTime}`, \"LLLL hh:mm a\");\n          const event: Event = {\n            title: x.title,\n            committee: x.committee,\n            start: startTime.toDate(),\n            end: startTime.add(3, \"hours\").toDate(),\n            link: x.link,\n            __typename: x.__typename,\n          };\n          return event;\n        })\n    : [];\n\n  return (\n    <LoadingWrapper loading={loading}>\n      <div className=\"big-calendar-wrapper\">\n        <Calendar\n          min={early}\n          className=\"big-calendar\"\n          localizer={localizer}\n          titleAccessor={(e) =>\n            `${getCommitteeLabel(e.committee, e.__typename)}: ${e.title}`\n          }\n          events={events}\n          onShowMore={(events, e) => handleShowMore(events)}\n          onView={(view: string) => {\n            // Refetching data for the other views when view range broadens\n            setMinDate(getMin(view, minDate));\n            setMaxDate(getMax(view, maxDate));\n            console.log(getMin(view, minDate));\n            console.log(getMax(view, maxDate));\n            setView(view);\n            // Somehow call fetchMore...\n            //useHomeState({ minDate, maxDate, house, senate });\n          }}\n          eventPropGetter={(e) => ({\n            className: \"collection-\" + e.__typename.toLowerCase() + \" isMagic\",\n          })}\n          onNavigate={(date, view) => handleOnNavigate({ date, view })}\n          onSelectEvent={(event: Event, e: React.SyntheticEvent): any =>\n            handleSelectEvent(event)\n          }\n          popup={true}\n          date={minDate || today}\n          //@ts-ignore\n          defaultView={isMobile ? \"day\" : view}\n          views={isMobile ? [\"day\"] : [\"month\", \"work_week\", \"day\"]}\n          drilldownView=\"day\"\n          onDrillDown={(date: Date, view: string) => {\n            setMaxDate(date);\n            setMinDate(date);\n            setView(view);\n          }}\n        />\n      </div>\n    </LoadingWrapper>\n  );\n};\n\nexport default BigCalendar;\n","import React, { useState, useRef } from \"react\";\nimport moment from \"moment\";\n\nimport CollectionSelectors from \"../../components/CollectionSelectors\";\nimport MTextBox from \"../../components/MTextBox\";\nimport BigCalendar from \"../../components/BigCalendar\";\nimport ViewWrapper from \"../../components/ViewWrapper\";\nimport {\n  useQueryParam,\n  StringParam,\n  BooleanParam,\n  DateParam,\n} from \"use-query-params\";\n\nimport \"./styles.scss\";\n\nexport const Home = () => {\n  const [filter, setFilter] = useQueryParam(\"filter\", StringParam);\n  const [view, setView] = useQueryParam(\"view\", StringParam);\n  const today = useRef(moment().startOf(\"day\").toDate()).current;\n  const early = useRef(moment(\"7:30\", \"h:mm\").toDate()).current;\n  const [minDate, setMinDate] = useQueryParam(\"minDate\", DateParam);\n  const [maxDate, setMaxDate] = useQueryParam(\"maxDate\", DateParam);\n  const [senate, setSenateSelected] = useQueryParam(\"senate\", BooleanParam);\n  const [house, setHouseSelected] = useQueryParam(\"house\", BooleanParam);\n  const setSenate = (e: boolean) => {\n    setSenateSelected(e);\n  };\n  const setHouse = (e: boolean) => setHouseSelected(e);\n\n  const handleSearch = (text: string) => {\n    setFilter(text);\n  };\n\n  console.log(minDate);\n  console.log(maxDate);\n\n  return (\n    <ViewWrapper>\n      <div className=\"homeFilters\">\n        <MTextBox\n          filter={filter ?? \"\"}\n          instant={true}\n          callBack={handleSearch}\n        />\n        <CollectionSelectors\n          house={house ?? true}\n          senate={senate ?? true}\n          setHouse={setHouse}\n          setSenate={setSenate}\n        />\n      </div>\n      <BigCalendar\n        minDate={minDate ?? today}\n        setMinDate={setMinDate}\n        setMaxDate={setMaxDate}\n        maxDate={maxDate ?? today}\n        filter={filter ?? \"\"}\n        house={house ?? true}\n        senate={senate ?? true}\n        early={early}\n        view={view ?? \"month\"}\n        setView={setView}\n      />\n    </ViewWrapper>\n  );\n};\n","/* istanbul ignore file */\n\nimport React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { QueryParamProvider } from \"use-query-params\";\n\nimport history from \"../history\";\nimport { Dashboard, About, NotFound, Home } from \"../views\";\n\nconst AppRouter = (): React.ReactElement => (\n  <Router history={history}>\n    <QueryParamProvider ReactRouterRoute={Route}>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/dashboard/:collection\" exact component={Dashboard} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"*\" component={NotFound} />\n      </Switch>\n    </QueryParamProvider>\n  </Router>\n);\n\nexport { AppRouter };\n","import { ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\n\nconst httpLink = createHttpLink({ uri: process.env.REACT_APP_API as string });\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache,\n  connectToDevTools: true,\n});\n\nexport default client;\n","import React, { useEffect } from \"react\";\nimport { AppRouter } from \"./routers\";\nimport ReactGA from \"react-ga\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport client from \"./graphql/client\";\n\nimport \"./styles/index.scss\";\n\nfunction App(): React.ReactElement {\n  useEffect(() => {\n    // Use Google Analytics (tested separately)\n    /* istanbul ignore next */\n    if (process.env.NODE_ENV === \"production\") {\n      ReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS as string);\n      ReactGA.pageview(\"/\");\n    }\n  }, []);\n\n  return (\n    <ApolloProvider client={client}>\n      <AppRouter />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}